1)

#include <stdio.h>

int main() {
    int lista[] = {3, 6, 8, 16, 8, 16};
    int len_lista = sizeof(lista) / sizeof(lista[0]);
    int ok = 1; // Utilizza 1 per true e 0 per false
    int i = 0;

    while (i < len_lista / 2 && ok) {
        if (lista[i] > lista[len_lista - 1 - i]) {
            ok = 0; // Imposta 0 (false) se la condizione non è rispettata
        }
        i++;
    }

    if (ok) {
        printf("OK\n");
    } else {
        printf("NO\n");
    }

    return 0;
}

Si descriva sinteticamente la funzione svolta dal brano. Si discuta inoltre l’effetto che si otterrebbe 
utilizzando nell’if la condizione alternativa “lista[i] > lista[-1-i]”. 

----------------------------------------------------------------
2)

#include <stdio.h>

int main() {
    int v[] = {1, 2, 3, 4, 6, 2, 1};
    int d = 7; // Lunghezza dell'array
    int s = 0;

    // Ciclo per confrontare gli elementi
    while (s < d && v[s] == v[d - 1]) {
        s++;
        d--;
    }

    if (s < d - 1) {
        printf("NO\n");
    } else {
        printf("SI\n");
    }

    return 0;
}

Si descriva sinteticamente la funzione svolta dal brano. 

-----------------------------------------------------------------

3)

#include <stdio.h>

int main() {
    int lista[] = {3, 2, 4, 7, 2, 3, 5};
    int len_lista = sizeof(lista) / sizeof(lista[0]);

    for (int i = 0; i < len_lista; i++) {
        if (i % 2 == 0 && lista[i] % 2 == 0) {
            printf("%d\n", lista[i]);
        }
        if (i % 2 != 0 && lista[i] % 2 != 0) {
            printf("%d\n", lista[i]);
        }
    }

    return 0;
}

Si descriva sinteticamente la funzione svolta dal brano. 

-----------------------------------------------------------------

4)
#include <stdio.h>
 
int main() {
    int x[] = {3, 2, 5, 4};
    int y[] = {8, 20, 6, 9};
    int d = 4;
    int n[d]; // Utilizza 0 per false e 1 per true
 
    // Inizializza l'array `n` a 0 (false)
    for (int i = 0; i < d; i++) {
        n[i] = 0;
    }
 
    // Esegue il ciclo principale
    for (int i = 0; i < d; i++) {
        if (y[i] % x[d - 1 - i] == 0) {
            n[i] = 1; // Imposta a 1 (true) se la condizione è soddisfatta
        }
    }
 
    // Stampa l'array `n` in modo leggibile
    printf("Risultato dell'array n:\n");
    for (int i = 0; i < d; i++) {
        printf("n[%d] = %d\n", i, n[i]);
    }
 
    return 0;
}

Si descriva sinteticamente la funzione svolta dal brano. 

-----------------------------------------------------------------

5)

#include <stdio.h>

void funzione_esercizio(int x, int l[], int len) {
    int i = 0;
    while (i < len) {
        if (l[i] % x != 0) {
            l[i] = 0;
        } else {
            l[i] /= x; // Divisione intera
        }
        i++;
    }
}

int main() {
    int lista[] = {9, 6, 2, 7, 15, 10};
    int valore = 3;
    int len_lista = sizeof(lista) / sizeof(lista[0]);

    // Chiamata alla funzione
    funzione_esercizio(valore, lista, len_lista);

    // Stampa dei risultati
    for (int i = 0; i < len_lista; i++) {
        if (lista[i] != 0) {
            printf("%d\n", lista[i]);
        }
    }

    return 0;
}

Si descriva sinteticamente il comportamento della funzione “funzione_esercizio(x, l)” e si indichino 
gli output prodotti dal brano. 